const React = require('react');
const { bridge } = require('electron').remote.require('./bridge');
const styleSelector = require('./style/ExtensionBadge');
const { _ } = require('lib/locale.js');

function platformAssets(type) {
	if (type === 'firefox') {
		return {
			logoImage: `${bridge().buildDir()}/images/firefox-logo.svg`,
			locationLabel: _('Firefox Extension')
		};
	}

	if (type === 'chrome') {
		return {
			logoImage: `${bridge().buildDir()}/images/chrome-logo.svg`,
			locationLabel: _('Chrome Web Store')
		};
	}

	throw new Error(`Invalid type:${type}`);
}

function ExtensionBadge(props) {
	const style = styleSelector(null, props);
	const assets = platformAssets(props.type);

	const onClick = () => {
		bridge().openExternal(props.url);
	};

	const rootStyle = props.style ? Object.assign({}, style.root, props.style) : style.root;

	return React.createElement(
		'a',
		{ style: rootStyle, onClick: onClick, href: '#' },
		React.createElement('img', { style: style.logo, src: assets.logoImage }),
		React.createElement(
			'div',
			{ style: style.labelGroup },
			React.createElement(
				'div',
				null,
				_('Get it now:')
			),
			React.createElement(
				'div',
				{ style: style.locationLabel },
				assets.locationLabel
			)
		)
	);
}

module.exports = ExtensionBadge;
