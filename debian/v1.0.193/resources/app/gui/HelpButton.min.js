var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

const React = require('react');
const { connect } = require('react-redux');
const { themeStyle } = require('../theme.js');

class HelpButtonComponent extends React.Component {
	constructor() {
		super();

		this.onClick = this.onClick.bind(this);
	}

	onClick() {
		if (this.props.onClick) this.props.onClick();
	}

	render() {
		const theme = themeStyle(this.props.theme);
		let style = Object.assign({}, this.props.style, { color: theme.color, textDecoration: 'none' });
		const helpIconStyle = { flex: 0, width: 16, height: 16, marginLeft: 10 };
		const extraProps = {};
		if (this.props.tip) extraProps['data-tip'] = this.props.tip;
		return React.createElement(
			'a',
			_extends({ href: '#', style: style, onClick: this.onClick }, extraProps),
			React.createElement('i', { style: helpIconStyle, className: 'fa fa-question-circle' })
		);
	}
}

const mapStateToProps = state => {
	return {
		theme: state.settings.theme
	};
};

const HelpButton = connect(mapStateToProps)(HelpButtonComponent);

module.exports = HelpButton;
